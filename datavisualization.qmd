---
title: "Data Visualization"
format:
  html:
    code-fold: true
---

Interactive Visualization Dashboard of CO2-to-MeOH Conversion Catalysts Performance
```{=html}
<iframe width="1000" height="600" src="https://lookerstudio.google.com/embed/reporting/b917fa98-c494-4779-b0a1-971fee54337e/page/4iY5C" title="Webpage example"></iframe>

```
```
```
Python Plotly Interactive Plots for Propane Oxidation Reaction
Source: DOI: 10.1021/jacs.2c11117
```{python}
import pandas as pd
import  seaborn as sns
import plotly.graph_objs as go
from plotly.subplots import make_subplots

data = pd.read_excel('data_set_performance.xlsx' )

# Define datarange range
start = 16
end = 24

################# Line Chart ##############################
chart1 = make_subplots(rows=1,cols=2,horizontal_spacing = 0.2)
color = sns.hls_palette(len(data.catalyst.unique()), l=.4, s=.8).as_hex()

n=0
for s in data.catalyst.unique():
    df_temp = data.copy()
    df_temp = df_temp[(df_temp['step'] >= start) & (df_temp['step'] <= end) & (df_temp['reaction'] == "C3")]
    df_temp = df_temp.loc[df_temp['catalyst'] == s]
    trace1 = go.Scatter(
        x=df_temp['temperature (C)'],
        y=df_temp["x_r propane (%)"],
        mode='markers+lines',line=dict(shape='spline',width=2, color=color[n]), marker=dict(color=color[n],size=8,line=dict(width=2,color='Black')), name=' {}'.format(s), legendgroup=s,
        showlegend=False
    )

    trace2 = go.Scatter(
        x=df_temp['temperature (C)'],
        y=df_temp["x_r oxygen (%)"],
        mode='markers+lines', line=dict(shape='spline',width=2, color=color[n]), marker=dict(color=color[n],size=8,line=dict(width=2,color='Black')), name=' {}'.format(s), legendgroup=s
    )

    chart1.add_trace(trace1, row=1, col=1)
    chart1.add_trace(trace2, row=1, col=2)
    n = n+1

# Update xaxis properties
chart1.update_xaxes(title_text='Temperature (h)',row=1, col=1)
chart1.update_xaxes(title_text='Temperature (h)',row=1, col=2)

# Update yaxis properties
chart1.update_yaxes(title_text='Propane Conversion (%)', row=1, col=1)
chart1.update_yaxes(title_text='Oxygen Conversion (%)', row=1, col=2)

# Update height
chart1.update_layout(height=600, width=799)
```
